## Voron Design VORON2 250/300/350mm SKR 1.4 TMC2209 UART config

#Test

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Fine tune E steps                    [extruder] section

##  Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

##========================== Pin Definitions ========================
## X_STEP_PIN         2.2
## X_DIR_PIN          2.6
## X_ENABLE_PIN       2.1
## X_STOP_PIN         1.29
## E0_DET_PIN         1.26
## X_UART_PIN         1.10


## Y_STEP_PIN         0.19
## Y_DIR_PIN          0.20
## Y_ENABLE_PIN       2.8
## Y_STOP_PIN         1.28
## E1_DET_PIN         1.26
## Y_UART_RX          1.9


## Z_STEP_PIN         0.22
## Z_DIR_PIN          2.11
## Z_ENABLE_PIN       0.21
## Z_STOP_PIN         1.27
## PWR_DET_PIN        1.0
## Z_UART             1.8


## E0_STEP_PIN        2.13
## E0_DIR_PIN         0.11
## E0_ENABLE_PIN      2.12
## E0_UART            1.4


## E1_STEP_PIN        1.15
## E1_DIR_PIN         1.14
## E1_ENABLE_PIN      1.16
## E1_UART_RX         1.1


## HE1                2.4
## HE0                2.7
## BED                2.5
## TH1 (H1 Temp)      0.23
## TH0 (H0 Temp)      0.24
## TB  (Bed Temp)     0.25
## FAN                2.3
## SERVO              2.0
## PROBE              0.10
##===================================================================

[mcu]
##  MCU for X/Y/E steppers main MCU
##  [X in X] - B Motor
##  [Y in Y] - A Motor
##  [E in E0] - Extruder
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_1BF00011A90825AEF4722D52861E00F5-if00
##--------------------------------------------------------------------

[mcu z]
##  MCU for Z steppers
##  [Z in X] - Front Left
##  [Z1 in Y] - Rear Left
##  [Z2 in Z] - Rear Right
##  [Z3 in E0]- Front Right
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_1E100112029175AF6E59FF5EC02000F5-if00
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 4000             #Max 4000
max_accel_to_decel: 4000
max_z_velocity: 25          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 500
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

[stepper_x]
##  Connected to X on mcu_xye (B Motor)
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: P1.29
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
position_endstop: 300
position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: P1.10
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
##  Connected to Y on mcu_xye (A Motor)
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: P1.28
position_min: -10
##--------------------------------------------------------------------

##  Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
position_endstop: 300
position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: P1.9
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

## Z MCU - In X Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: z:P2.2
dir_pin: !z:P2.6
enable_pin: !z:P2.1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: z:P1.27
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: -0.198
##--------------------------------------------------------------------
##  Uncomment below for 300mm build
position_max: 270
##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: z:P1.10
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 1000

##  Z MCU - In Y Position
##  Z1 Stepper - Rear Left
[stepper_z1]
step_pin: z:P0.19
dir_pin: z:P0.20
enable_pin: !z:P2.8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: z:P1.9
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 1000

##  Z MCU - In Z Position
##  Z2 Stepper - Rear Right
[stepper_z2]
step_pin: z:P0.22
dir_pin: !z:P2.11
enable_pin: !z:P0.21
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: z:P1.8
interpolate: true
run_current: 0.8
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 1000

##  Z MCU - In E0 Position
##  Z3 Stepper - Front Right
[stepper_z3]
step_pin: z:P2.13
dir_pin: z:P0.11
enable_pin: !z:P2.12
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: z:P1.4
interpolate: true
run_current: 0.8
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 1000


#####################################################################
#   Extruder
#####################################################################

#   E0 on MCU X/Y
[extruder]
step_pin: P2.13
dir_pin: !P0.11
enable_pin: !P2.12
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 8   #Bondtech LGX
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
#gear_ratio: 50:17               #LGX Gear Ratio??
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: P2.7
##  Validate the following thermistor type to make sure it is correct
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: P0.24
min_temp: 10
max_temp: 310
max_power: 1.0
min_extrude_temp: 170
max_extrude_cross_section: 1.0

## PID Tuning
control = pid
pid_Kp=22.303
pid_Ki=2.155
pid_Kd=57.710

##  Try to keep pressure_advance below 1.0
pressure_advance: 0.07
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##  E0 on MCU X/Y
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: P1.4
interpolate: false
run_current: 0.45
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - Z board, Fan Pin
heater_pin: z:P2.3
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: z:P0.25
##  Adjust Max Power so your heater doesn't warp your bed
pwm_cycle_time: 0.017
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid
pid_Kp=42.066
pid_Ki=1.659
pid_Kd=266.595

[temperature_sensor top_bed]
gcode_id: TB
sensor_type: Generic 3950
sensor_pin: P0.25
;smooth_time: 2.0
min_temp: 0
max_temp: 120

#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling
##  Z_MAX on mcu_z
##  If your probe is NO instead of NC, add change pin to !z:P0.10
pin: ^z:P0.10
z_offset = 6.42
x_offset: 0
y_offset: 19.75
speed: 6
# lift_speed: 15
samples: 3
samples_result: average
sample_retract_dist: 1.0
samples_tolerance: 0.04
samples_tolerance_retries: 3

#####################################################################
#   Z-Calibration Plugin:
#   ref: https://github.com/protoloft/klipper_z_calibration
#####################################################################
[z_calibration]
probe_nozzle_x: 205.70
probe_nozzle_y: 299
#   The X and Y coordinates (in mm) for clicking the nozzle on the
#   Z endstop.
probe_switch_x: 209.00
probe_switch_y: 276.25
#   The X and Y coordinates (in mm) for clicking the probe's switch
#   on the Z endstop.
#probe_bed_x: 150
#probe_bed_y: 130
#   The X and Y coordinates (in mm) for probing on the print surface
#   (e.g. the center point) These coordinates will be adapted by the
#   probe's X and Y offsets. The default is the relative_reference_index
#   of the configured bed_mesh. It will raise an error if there is no
#   probe_bed site and no bed_mesh with a relative_reference_index
#   configured.
# larger is closer to the bed!
# 0 -- Closer --> 1
switch_offset: 1.0
#   The trigger point offset of the used mag-probe switch.
#   This needs to be fined out manually. More on this later
#   in this section..
max_deviation: 1.5
#   This setting is how you detect if the nozzle was dirty!!
#   The maximum allowed deviation of the calculated offset.
#   If the offset exceeds this value, it will stop!
#   The default is 1.0 mm.
#samples: default from "probe:samples" section
#   The number of times to probe each point. The probed z-values
#   will be averaged. The default is from the probe's configuration.
#samples_tolerance: default from "probe:samples_tolerance" section
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. The default is from the probe's configuration.
#samples_tolerance_retries: default from "probe:samples_tolerance_retries" section
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. The default is from the probe's configuration.
#samples_result: default from "probe:samples_result" section
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is from the probe's configuration.
#clearance: 2 * z_offset from the "probe:z_offset" section
#   The distance in mm to move up before moving to the next
#   position. The default is two times the z_offset from the probe's
#   configuration.
#position_min: default from "stepper_z:position_min" section.
#   Minimum valid distance (in mm) used for probing move. The
#   default is from the Z rail configuration.
speed: 300
#   The moving speed in X and Y. The default is 50 mm/s.
#lift_speed: default from "probe:lift_speed" section
#   Speed (in mm/s) of the Z axis when lifting the probe between
#   samples and clearance moves. The default is from the probe's
#   configuration.
#probing_speed: default from "stepper_z:homing_speed" section.
#   The fast probing speed (in mm/s) used, when probing_first_fast
#   is activated. The default is from the Z rail configuration.
#probing_second_speed: default from "stepper_z:second_homing_speed" section.
#   The slower speed (in mm/s) for probing the recorded samples.
#   The default is second_homing_speed of the Z rail configuration.
#probing_retract_dist: default from "stepper_z:homing_retract_dist" section.
#   Distance to backoff (in mm) before probing the next sample.
#   The default is homing_retract_dist from the Z rail configuration.
probing_first_fast: true
#   If true, the first probing is done faster by the probing speed.
#   This is to get faster down and the result is not recorded as a
#   probing sample. The default is false.
start_gcode: Dock_Probe_Unlock
#   A list of G-Code commands to execute prior to each calibration command.
#   See docs/Command_Templates.md for G-Code format. This can be used to
#   attach the probe.
before_switch_gcode: Attach_Probe
#   A list of G-Code commands to execute prior to each probing on the
#   mag-probe. See docs/Command_Templates.md for G-Code format. This can be
#   used to attach the probe after probing on the nozzle and before probing
#   on the mag-probe.
end_gcode: Dock_Probe
#   A list of G-Code commands to execute after each calibration command.
#   See docs/Command_Templates.md for G-Code format. This can be used to
#   detach the probe afterwards.

#####################################################################
#   Fan Control
#####################################################################

[heater_fan hotend_fan]
##  Hotend Fan - XYE board, HE1 Connector
pin: P2.4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
##  Print Cooling Fan - XYE board, Fan Pin
pin: P2.3
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[controller_fan step_stick_cooler]
##  Controller fan - Z board, HE1 Connector
pin: z:P2.4
max_power: 1.0
kick_start_time: 0.5
heater: heater_bed
fan_speed: 1.0

[controller_fan exhaust_fan]
##  Exhaust fan - Z board, HE0 Connector
pin: z:P2.7
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 1.0
heater: heater_bed
idle_timeout: 0
fan_speed: 1.0

[thermistor NTCS0805E3103FHT]
temperature1: 25
resistance1: 10000 
beta: 3950

[temperature_sensor chamber_temp]
gcode_id: C
sensor_type: NTCS0805E3103FHT
sensor_pin: z:P0.24
min_temp: 0
max_temp: 120

#####################################################################
#   LED Control
#####################################################################

[output_pin caselight]
# Chamber Lighting - Bed Connector (Optional)
pin: P2.5
pwm:true
shutdown_value: 0
value: 1
cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 3600   # after 1 hour, shut off heaters and de-energize the motors

# [safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
# home_xy_position: 206.70,299
# speed:100
# z_hop:10

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

#--------------------------------------------------------------------
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
gantry_corners:
    -60,-10
    360,370
##  Probe points
points:
    50,25
    50,225
    250,225
    250,25

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

#[build_sheets]
#is_toolchanger: False
#override_set_gcode_offset: False

[gcode_macro INSTALL_BD_TEXTURED_SHEET]
gcode:
    INSTALL_BUILD_SHEET SHEET="BD3D Textured"

[gcode_macro INSTALL_BD_SMOOTH_SHEET]
gcode:
    INSTALL_BUILD_SHEET SHEET="BD3D Smooth"

[gcode_macro REMOVE_SHEET]
gcode:
    REMOVE_BUILD_SHEET

[gcode_macro SHEET_STATUS]
gcode:
    BUILD_SHEETS_STATUS


#####################################################################
#   Mesh Bed Leveling
#####################################################################

[bed_mesh]
speed: 120
horizontal_move_z: 10
mesh_min: 8,17
mesh_max: 296, 287
probe_count: 8,8
algorithm: bicubic

#####################################################################
#   Input Shaper
#####################################################################

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    150,150,20

[input_shaper]
shaper_freq_x: 45.4
shaper_type_x: mzv
shaper_freq_y: 35.2
shaper_type_y: mzv

#####################################################################
#   Macros
#####################################################################
[include klicky-probe.cfg]
[include neopixels.cfg]

[gcode_macro PARK_REAR]
gcode:
    SAVE_GCODE_STATE NAME={params.FUNCTION}
    ; park the head at the front of the printer
    G90
    G1 X150 Y300 F3000.0
    RESTORE_GCODE_STATE NAME={params.FUNCTION}

[gcode_macro PARK_FRONT]
gcode:
    SAVE_GCODE_STATE NAME={params.FUNCTION}
    ; park the head at the front of the printer
    G90
    G1 X150 Y10 F3000.0
    RESTORE_GCODE_STATE NAME={params.FUNCTION}

[gcode_macro SAFE_LIFT_Z]
gcode:
    SAVE_GCODE_STATE NAME={params.FUNCTION}
    # user parameters
    {% set z_height      = params.Z|default(0.0)|float %}
    {% set speed         = params.F|default(printer.gcode_move.speed)|int %}
    {% set axis_maximum  = printer.toolhead.axis_maximum %}
	{% set position      = printer.toolhead.position     %}

    # compute the minimum safe upward move size
    {% set z_height = [z_height, axis_maximum.z - position.z]|min|float%}

    G91
    G1 Z{z_height} F{speed}

    RESTORE_GCODE_STATE NAME={params.FUNCTION}

[gcode_macro PRINT_AREA_BED_MESH_CALIBRATE]
gcode:
    # defaults from bed_mesh
    {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
    {% set bed_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
    {% set bed_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
    {% set bed_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
    {% set bed_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
    {% set max_probe_count_x = bedMeshConfig.probe_count.split(",")[0]|int %}
    {% set max_probe_count_y = bedMeshConfig.probe_count.split(",")[1]|int %}
    # user parameters
    {% set area_min_x = params.PRINT_START_X|default(bed_min_x)|float %}
    {% set area_min_y = params.PRINT_START_Y|default(bed_min_y)|float %}
    {% set area_max_x = params.PRINT_END_X|default(bed_max_x)|float %}
    {% set area_max_y = params.PRINT_END_Y|default(bed_max_y)|float %}
    {% set mesh_area_padding = params.MESH_ARE_PADDING|default(5.0)|float %}
    {% set min_probe_count_x = params.MIN_PROBE_COUNT_X|default(3)|int %}
    {% set min_probe_count_y = params.MIN_PROBE_COUNT_Y|default(3)|int %}

    # add padding to the print area if possible
    {% set area_min_x = [area_min_x - mesh_area_padding, bed_min_x]|max %}
    {% set area_min_y = [area_min_y - mesh_area_padding, bed_min_y]|max %}
    {% set area_max_x = [area_max_x + mesh_area_padding, bed_max_x]|min %}
    {% set area_max_y = [area_max_y + mesh_area_padding, bed_max_y]|min %}

    # compute raw scaled values for the probe counts from 0 to max_probe_count_x/y
    {% set probe_count_unscaled_x = ((area_max_x - area_min_x)/bed_max_x) * max_probe_count_x|float %}
    {% set probe_count_unscaled_y = ((area_max_y - area_min_y)/bed_max_y) * max_probe_count_y|float %}

    # scale those values up from: 0 - min_probe_count_x/y to the scale: min_probe_count_x/y - min_probe_count_x/y
    {% set probe_count_x = ((max_probe_count_x - min_probe_count_x) * probe_count_unscaled_x / max_probe_count_x + min_probe_count_x)|round|int %}
    {% set probe_count_y = ((max_probe_count_y - min_probe_count_y) * probe_count_unscaled_y / max_probe_count_y + min_probe_count_y)|round|int %}

    BED_MESH_CALIBRATE MESH_MIN={area_min_x},{area_min_y} MESH_MAX={area_max_x},{area_max_y} PROBE_COUNT={("%d,%d" % (probe_count_x,probe_count_y))}


[gcode_macro PURGE_LINE]
gcode:
    {% set purge_start_x = params.PRINT_START_X|default(5.0)|float %}
    {% set purge_start_y = params.PRINT_START_Y|default(-5.0)|float %}

    ; purge/prime nozzle
    G90 ; use absolute coordinates
    M83 ; extruder relative mode
    ; go to the start of the print area, but -5 in Y
    G1 X{purge_start_x} Y{purge_start_y} Z0.3 F7200.0 ; go to the purge start location
    G92 E0.0
    G91 ; relative coordinates
    G1 X40.0 E10.0 F1000.0  ; narrow start line
    G1 X40.0 E15.0 F1000.0  ; priming thick outro line
    G92 E0.0
    G1 X3.0 Y3.0 F1000.0    ; move the nozzle away from the end of the purge line so the print doesnt drage the nozzle back throught it.
    G90
    G1 F7200.0

[gcode_macro G32]
gcode:
    STATUS_HOMING
    BED_MESH_CLEAR
    # motors off
    M84
    G4 P200

    # enable motors (this seems to energize the steppers in Klipper and no micro-moves are needed)
    SET_STEPPER_ENABLE STEPPER=stepper_x  ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_y  ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z  ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z2 ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z3 ENABLE=1
    #wait at least 120ms for StealthChop to sense standstill current
    G4 P200

    #now proceed to home as normal
    STATUS_HOMING
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_HOMING
    G28

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
variable_parameter_PRINT_START_X : 0
variable_parameter_PRINT_START_Y : 0
variable_parameter_PRINT_END_X : 0
variable_parameter_PRINT_END_Y : 0
gcode:
    {% set safe_max_x = 300 - 80 %}
    {% set start_x = params.PRINT_START_X|default(0)|float %}
    {% set start_y = params.PRINT_START_Y|default(0)|float %}
    {% set end_x = params.PRINT_END_X|default(300)|float %}
    {% set end_y = params.PRINT_END_Y|default(300)|float %}
    # Enlarge the start area as needed to contain the purge line:
    {% set start_x = [start_x, safe_max_x]|min %}
    {% set start_y = start_y - 5 %}

    {% set probe_x = start_x + ((end_x - start_x) / 2) %}
    {% set probe_y = start_y + ((end_y - start_y) / 2) %}

    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}

    ; Prusa slicer sets the nozzle temp before bed claibration which causes long heat soak times with no extrusion.
    M104 S{EXTRUDER_TEMP * 0.60}        ; set extruder temperature to 60%
    M140 S{BED_TEMP}                    ; set bed temprature
    M106 S32                            ; Enable the part cooling fan to keep the probe cool during probing
    G32                                 ; home all axes with extruder heat up
    # wait for top bed sensor to be in thermal equilibrium:
    ; TEMPERATURE_WAIT SENSOR="temperature_sensor top_bed" MAX_SLOPE=0.8
    # mesh bed level
    STATUS_MESHING
    PRINT_AREA_BED_MESH_CALIBRATE PRINT_START_X={start_x} PRINT_START_Y={start_y} PRINT_END_X={end_x} PRINT_END_Y={end_y}
    # calibrate Klicky probe Z
    status_calibrating_z
    CALIBRATE_Z PROBE_BED_X={probe_x} PROBE_BED_Y={probe_y}
    ; move to the front of the printer to allow user to remove any oozing
    G90
    G1 Z25 F3000
    PARK_FRONT                          ; Move tool head to front to facilitate ooze cleanup
    STATUS_HEATING
    M109 S{EXTRUDER_TEMP}               ; Wait for nozzle to finish heating
    M106 S0                             ; Done waiting, part cooling off and back to slicer control
    STATUS_PRINTING
    ; could be further improves by a Z-axis calibration after heating but it doesnt seem to be neded.
    PURGE_LINE PRINT_START_X={start_x} PRINT_START_Y={start_y}

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for move buffer to clear
    G92 E0                         ; zero the extruder
    G91                            ; relative positioning
    ; TODO: this line is buggy, if the nozzle is near the edge or the build enevelope it may exceeed the build volume and error out
    ; This needs to have a direction picked for each axis based on the printers current position
    G1 Z1.00 X5.0 Y5.0 E-1.0 F20000      ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    SAFE_LIFT_Z Z=10 F=3000.0
    PARK_REAR
    STATUS_OFF
    BED_MESH_CLEAR

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    M107
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    SAFE_LIFT_Z Z=10 F=3000.0
    PARK_REAR
    STATUS_OFF
    BED_MESH_CLEAR
    BASE_CANCEL_PRINT

; catch M600 from Prusa Slicer to allow a manual color change
[gcode_macro M600]
gcode:
    PAUSE
    SAFE_LIFT_Z Z=10 F=3000.0
    PARK_FRONT

; Override Fan Speed with a custom macro that allows changing the Minimum fan speed on the fly
;[gcode_macro M106]
;rename_existing: BASE_M106
;variable_parameter_S : 0
;variable_parameter_S_MIN : -1
;gcode:
;    %{ set min_fan_speed = 0 %}
;    {% if S_MIN != -1 %}
;        %{ set min_fan_speed = S_MIN %}
;        SET_GCODE_VARIABLE MACRO=M106 VARIABLE=min_fan_speed VALUE={min_fan_speed}
;    {% endif %}

;    {% if printer["gcode_macro M106"].min_fan_speed %}
;        %{ set min_fan_speed = printer["gcode_macro M106"].min_fan_speed %}
;    {% endif %}

;    %{ set fan_speed = [S, min_fan_speed]|max %}
;    M106 S{fan_speed}
