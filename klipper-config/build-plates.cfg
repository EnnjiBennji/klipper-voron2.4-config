## Macro to install a build plate
[gcode_macro INSTALL_BUILD_PLATE]
description: Install a build plate and save settings
variable_parameter_NAME: "Unknown Build Plate"
variable_parameter_OFFSET: 0.0
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set plate_name = (params.NAME | default("Unknown Build Plate") | string) %}    
    {% set plate_offset = (params.OFFSET | default(0.0) | float) %}
    {% set plate_key = ("build_plate " ~ (plate_name | lower | replace(" ", "_"))) %}
    {% set plate = (svv[plate_key] | default(None)) %}
    {% if not plate %}
        # the plate does not exist, create it
        {% set plate_literal = ('{"name": "%s", "offset": %.3f}' % (plate_name, plate_offset)) %}
        SAVE_VARIABLE VARIABLE="{plate_key}" VALUE='{plate_literal}'
    {% endif %}
    SAVE_VARIABLE VARIABLE="build_plate installed" VALUE="'{plate_key}'"
    SHOW_BUILD_PLATE

[gcode_macro SHOW_BUILD_PLATE]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set plate_key = (svv["build_plate installed"] | string) %}
    {% set plate = (svv[plate_key] | default(None)) %}
    {% if plate %}
        {action_respond_info("Build plate: %s, Offset: %.3fmm" % (plate.name, plate.offset))}
    {% else %}
        {action_respond_info("No build plate installed") }
    {% endif %}

[gcode_macro SET_BUILD_PLATE_OFFSET]
description: Set an arbitrary offset for a build plate
variable_parameter_OFFSET: 0.0
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set plate_offset = (params.OFFSET | default(0.0) | float) %}
    {% set plate_key = (svv["build_plate installed"] | string) %}
    {% set plate = (svv[plate_key] | default(None)) %}
    {% if plate %}
        {% set plate_literal = ('{"name": "%s", "offset": %.3f}' % (plate.name, plate_offset)) %}
        SAVE_VARIABLE VARIABLE="{plate_key}" VALUE='{plate_literal}'
    {% endif %}
    SHOW_BUILD_PLATE

[gcode_macro RESET_BUILD_PLATE_OFFSET]
description: Set the build plate offset to 0.0
gcode:
    SET_BUILD_PLATE_OFFSET OFFSET=0.0

[gcode_macro SET_GCODE_OFFSET]
rename_existing: _BUILD_PLATES__SET_GCODE_OFFSET
gcode:
    # this runs first so if the caller messed up the params it failes
    _BUILD_PLATES__SET_GCODE_OFFSET {% for p in params
            %}{'%s=%s ' % (p, params[p])}{%
           endfor %}

    {% set svv = printer.save_variables.variables %}
    {% set plate_key = (svv["build_plate installed"] | string) %}
    {% set plate = (svv[plate_key] | default(None)) %}
    {% if plate and (params.Z_ADJUST is defined) and ((params.Z_ADJUST | float) != 0.0) and ((params.MOVE | int) == 1) %}
        {% set offset = (plate.offset + (params.Z_ADJUST | default(0.0) | float)) %}
        {% set plate_literal = ('{"name": "%s", "offset": %.3f}' % (plate.name, offset)) %}
        SAVE_VARIABLE VARIABLE="{plate_key}" VALUE='{plate_literal}'
        SHOW_BUILD_PLATE
    {% endif %}

[gcode_macro APPLY_BUILD_PLATE_ADJUSTMENT]
description: Applies the plate offset adjustment for the installed build plate, call from your PRINT_START macro
gcode:
    # get the offset from saved variables
    {% set svv = printer.save_variables.variables %}
    {% set plate_key = (svv["build_plate installed"] | string) %}
    {% set plate = (svv[plate_key] | default(None)) %}
    {% if plate %}
        # log this to the console so if there is an issue with the print the user can see which plate the printer thought it had installed
        {action_respond_info("Applying offset: %.3fmm for build plate: %s" % (plate.offset, plate.name))}
        _BUILD_PLATES__SET_GCODE_OFFSET Z_ADJUST={plate.offset} MOVE=1
    {% else %}
        {action_respond_info("No build plate installed, offset adjustment: 0.000mm") }
    {% endif %}
